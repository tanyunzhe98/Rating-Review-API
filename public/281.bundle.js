"use strict";(self.webpackChunkrating_review_api=self.webpackChunkrating_review_api||[]).push([[281],{4541:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2861);\n/* harmony import */ var _ModuleContext_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7084);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar ClickTracker = function ClickTracker(_ref) {\n  var selector = _ref.selector,\n    WrappedComponent = _ref.WrappedComponent;\n  // const style = {\n  //   boxShadow: 'inset 0 0 0 0 #54b3d6',\n  //   color: '#54b3d6',\n  //   margin: '0 -.25rem',\n  //   padding: '0 .25rem',\n  //   transition: 'color .3s ease-in-out, box-shadow .3s ease-in-out',\n  // }\n  // const hoverStyle = {\n  //   boxShadow: 'inset 100px 0 0 0 #54b3d6',\n  //   color: 'white',\n  // }\n  // style={divStyle}\n  // onMouseEnter={e => setDivStyle(hoverStyle)}\n  // onMouseLeave={e => setDivStyle(style)}\n  // const [divStyle, setDivStyle] = useState(style);\n  var module = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ModuleContext_js__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    interaction = _useState2[0],\n    setInteraction = _useState2[1];\n  var handleClick = function handleClick(e) {\n    e.stopPropagation();\n    var newInteraction = {\n      element: selector,\n      widget: module,\n      time: Date.now().toString()\n    };\n    console.log('Interaction:\\n', newInteraction);\n    axios__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"].post */ .Z.post('/interactions', newInteraction)[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onClick: handleClick,\n    className: selector\n  }, WrappedComponent);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ClickTracker);\n\n// const style = {\n//   boxShadow: 'inset 0 0 0 0 #54b3d6',\n//   color: '#54b3d6',\n//   margin: '0 -.25rem',\n//   padding: '0 .25rem',\n//   transition: 'color .3s ease-in-out, box-shadow .3s ease-in-out',\n// }\n// const hoverStyle = {\n//   boxShadow: 'inset 100px 0 0 0 #54b3d6',\n//   color: 'white',\n// }\n// style={divStyle}\n// onMouseEnter={e => setDivStyle(hoverStyle)}\n// onMouseLeave={e => setDivStyle(style)}\n// const [divStyle, setDivStyle] = useState(style);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDU0MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBMEI7QUFDOEI7QUFDOUI7QUFDcUI7QUFFL0MsSUFBSU0sWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQUFDLElBQUEsRUFBcUM7RUFBQSxJQUFoQ0MsUUFBUSxHQUFBRCxJQUFBLENBQVJDLFFBQVE7SUFBRUMsZ0JBQWdCLEdBQUFGLElBQUEsQ0FBaEJFLGdCQUFnQjtFQUM3QztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSxJQUFNQyxNQUFNLEdBQUdQLGlEQUFVLENBQUNFLGtFQUFhLENBQUM7RUFDeEMsSUFBQU0sU0FBQSxHQUFzQ1YsK0NBQVEsQ0FBQ1csU0FBUyxDQUFDO0lBQUFDLFVBQUEsR0FBQUMsY0FBQSxDQUFBSCxTQUFBO0lBQWxESSxXQUFXLEdBQUFGLFVBQUE7SUFBRUcsY0FBYyxHQUFBSCxVQUFBO0VBQ2xDLElBQUlJLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFJQyxDQUFDLEVBQUs7SUFDdkJBLENBQUMsQ0FBQ0MsZUFBZSxFQUFFO0lBQ25CLElBQUlDLGNBQWMsR0FBRztNQUNuQkMsT0FBTyxFQUFFYixRQUFRO01BQ2pCYyxNQUFNLEVBQUVaLE1BQU07TUFDZGEsSUFBSSxFQUFFQyxJQUFJLENBQUNDLEdBQUcsRUFBRSxDQUFDQyxRQUFRO0lBQzNCLENBQUM7SUFDREMsT0FBTyxDQUFDQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUVSLGNBQWMsQ0FBQztJQUM3Q2hCLGdFQUFVLENBQUMsZUFBZSxFQUFFZ0IsY0FBYyxDQUFDLFNBQ25DLENBQUMsVUFBQVUsR0FBRztNQUFBLE9BQUlILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxHQUFHLENBQUM7SUFBQSxFQUFDO0VBQ25DLENBQUM7RUFDRCxvQkFDSTlCLGdEQUFBO0lBQUtnQyxPQUFPLEVBQUVmLFdBQVk7SUFBQ2dCLFNBQVMsRUFBRXpCO0VBQVMsR0FDNUNDLGdCQUFnQixDQUNiO0FBRVosQ0FBQztBQUVELGlFQUFlSCxZQUFZLEVBQUM7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JhdGluZy1yZXZpZXctYXBpLy4vc3JjL0NsaWNrVHJhY2tlci5qc3g/Y2QwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQgTW9kdWxlQ29udGV4dCBmcm9tICcuL01vZHVsZUNvbnRleHQuanMnO1xuXG52YXIgQ2xpY2tUcmFja2VyID0gKHtzZWxlY3RvciwgV3JhcHBlZENvbXBvbmVudH0pID0+IHtcbiAgLy8gY29uc3Qgc3R5bGUgPSB7XG4gIC8vICAgYm94U2hhZG93OiAnaW5zZXQgMCAwIDAgMCAjNTRiM2Q2JyxcbiAgLy8gICBjb2xvcjogJyM1NGIzZDYnLFxuICAvLyAgIG1hcmdpbjogJzAgLS4yNXJlbScsXG4gIC8vICAgcGFkZGluZzogJzAgLjI1cmVtJyxcbiAgLy8gICB0cmFuc2l0aW9uOiAnY29sb3IgLjNzIGVhc2UtaW4tb3V0LCBib3gtc2hhZG93IC4zcyBlYXNlLWluLW91dCcsXG4gIC8vIH1cbiAgLy8gY29uc3QgaG92ZXJTdHlsZSA9IHtcbiAgLy8gICBib3hTaGFkb3c6ICdpbnNldCAxMDBweCAwIDAgMCAjNTRiM2Q2JyxcbiAgLy8gICBjb2xvcjogJ3doaXRlJyxcbiAgLy8gfVxuICAvLyBzdHlsZT17ZGl2U3R5bGV9XG4gIC8vIG9uTW91c2VFbnRlcj17ZSA9PiBzZXREaXZTdHlsZShob3ZlclN0eWxlKX1cbiAgLy8gb25Nb3VzZUxlYXZlPXtlID0+IHNldERpdlN0eWxlKHN0eWxlKX1cbiAgLy8gY29uc3QgW2RpdlN0eWxlLCBzZXREaXZTdHlsZV0gPSB1c2VTdGF0ZShzdHlsZSk7XG4gIGNvbnN0IG1vZHVsZSA9IHVzZUNvbnRleHQoTW9kdWxlQ29udGV4dCk7XG4gIGNvbnN0IFtpbnRlcmFjdGlvbiwgc2V0SW50ZXJhY3Rpb25dID0gdXNlU3RhdGUodW5kZWZpbmVkKTtcbiAgdmFyIGhhbmRsZUNsaWNrID0gKGUpID0+IHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHZhciBuZXdJbnRlcmFjdGlvbiA9IHtcbiAgICAgIGVsZW1lbnQ6IHNlbGVjdG9yLFxuICAgICAgd2lkZ2V0OiBtb2R1bGUsXG4gICAgICB0aW1lOiBEYXRlLm5vdygpLnRvU3RyaW5nKClcbiAgICB9O1xuICAgIGNvbnNvbGUubG9nKCdJbnRlcmFjdGlvbjpcXG4nLCBuZXdJbnRlcmFjdGlvbik7XG4gICAgYXhpb3MucG9zdCgnL2ludGVyYWN0aW9ucycsIG5ld0ludGVyYWN0aW9uKVxuICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgfVxuICByZXR1cm4gKFxuICAgICAgPGRpdiBvbkNsaWNrPXtoYW5kbGVDbGlja30gY2xhc3NOYW1lPXtzZWxlY3Rvcn0gPlxuICAgICAgICB7V3JhcHBlZENvbXBvbmVudH1cbiAgICAgIDwvZGl2PlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IENsaWNrVHJhY2tlcjtcblxuICAvLyBjb25zdCBzdHlsZSA9IHtcbiAgLy8gICBib3hTaGFkb3c6ICdpbnNldCAwIDAgMCAwICM1NGIzZDYnLFxuICAvLyAgIGNvbG9yOiAnIzU0YjNkNicsXG4gIC8vICAgbWFyZ2luOiAnMCAtLjI1cmVtJyxcbiAgLy8gICBwYWRkaW5nOiAnMCAuMjVyZW0nLFxuICAvLyAgIHRyYW5zaXRpb246ICdjb2xvciAuM3MgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgLjNzIGVhc2UtaW4tb3V0JyxcbiAgLy8gfVxuICAvLyBjb25zdCBob3ZlclN0eWxlID0ge1xuICAvLyAgIGJveFNoYWRvdzogJ2luc2V0IDEwMHB4IDAgMCAwICM1NGIzZDYnLFxuICAvLyAgIGNvbG9yOiAnd2hpdGUnLFxuICAvLyB9XG4gIC8vIHN0eWxlPXtkaXZTdHlsZX1cbiAgLy8gb25Nb3VzZUVudGVyPXtlID0+IHNldERpdlN0eWxlKGhvdmVyU3R5bGUpfVxuICAvLyBvbk1vdXNlTGVhdmU9e2UgPT4gc2V0RGl2U3R5bGUoc3R5bGUpfVxuICAvLyBjb25zdCBbZGl2U3R5bGUsIHNldERpdlN0eWxlXSA9IHVzZVN0YXRlKHN0eWxlKTsiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUNvbnRleHQiLCJheGlvcyIsIk1vZHVsZUNvbnRleHQiLCJDbGlja1RyYWNrZXIiLCJfcmVmIiwic2VsZWN0b3IiLCJXcmFwcGVkQ29tcG9uZW50IiwibW9kdWxlIiwiX3VzZVN0YXRlIiwidW5kZWZpbmVkIiwiX3VzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5IiwiaW50ZXJhY3Rpb24iLCJzZXRJbnRlcmFjdGlvbiIsImhhbmRsZUNsaWNrIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsIm5ld0ludGVyYWN0aW9uIiwiZWxlbWVudCIsIndpZGdldCIsInRpbWUiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJjb25zb2xlIiwibG9nIiwicG9zdCIsImVyciIsImNyZWF0ZUVsZW1lbnQiLCJvbkNsaWNrIiwiY2xhc3NOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4541\n")},281:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Reviews_Ratingbreakdown)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Rating/Rating.js + 3 modules\nvar Rating = __webpack_require__(3527);\n// EXTERNAL MODULE: ./node_modules/@mui/material/Button/Button.js + 2 modules\nvar Button = __webpack_require__(6914);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(3366);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(7462);\n// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js\nvar clsx_m = __webpack_require__(6010);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/composeClasses/composeClasses.js\nvar composeClasses = __webpack_require__(4780);\n// EXTERNAL MODULE: ./node_modules/@emotion/react/dist/emotion-react.browser.esm.js\nvar emotion_react_browser_esm = __webpack_require__(917);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/colorManipulator.js\nvar colorManipulator = __webpack_require__(1796);\n// EXTERNAL MODULE: ./node_modules/@mui/material/utils/capitalize.js\nvar capitalize = __webpack_require__(8216);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useTheme.js\nvar useTheme = __webpack_require__(2734);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/styled.js + 2 modules\nvar styled = __webpack_require__(9602);\n// EXTERNAL MODULE: ./node_modules/@mui/material/styles/useThemeProps.js + 2 modules\nvar useThemeProps = __webpack_require__(6122);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js\nvar generateUtilityClasses = __webpack_require__(1588);\n// EXTERNAL MODULE: ./node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js\nvar generateUtilityClass = __webpack_require__(4867);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/LinearProgress/linearProgressClasses.js\n\n\nfunction getLinearProgressUtilityClass(slot) {\n  return (0,generateUtilityClass/* default */.Z)('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = (0,generateUtilityClasses/* default */.Z)('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\n/* harmony default export */ const LinearProgress_linearProgressClasses = ((/* unused pure expression or super */ null && (linearProgressClasses)));\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(5893);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/LinearProgress/LinearProgress.js\n\n\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\n\n\n\n\n\n\n\n\n\n\n\n\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = (0,emotion_react_browser_esm/* keyframes */.F4)(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = (0,emotion_react_browser_esm/* keyframes */.F4)(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = (0,emotion_react_browser_esm/* keyframes */.F4)(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${(0,capitalize/* default */.Z)(color)}`, variant],\n    dashed: ['dashed', `dashedColor${(0,capitalize/* default */.Z)(color)}`],\n    bar1: ['bar', `barColor${(0,capitalize/* default */.Z)(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${(0,capitalize/* default */.Z)(color)}`, variant === 'buffer' && `color${(0,capitalize/* default */.Z)(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return (0,composeClasses/* default */.Z)(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? (0,colorManipulator/* lighten */.$n)(theme.palette[color].main, 0.62) : (0,colorManipulator/* darken */._j)(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = (0,styled/* default */.ZP)('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${(0,capitalize/* default */.Z)(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => (0,esm_extends/* default */.Z)({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = (0,styled/* default */.ZP)('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${(0,capitalize/* default */.Z)(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return (0,esm_extends/* default */.Z)({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, (0,emotion_react_browser_esm/* css */.iv)(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = (0,styled/* default */.ZP)('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${(0,capitalize/* default */.Z)(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => (0,esm_extends/* default */.Z)({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && (0,emotion_react_browser_esm/* css */.iv)(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = (0,styled/* default */.ZP)('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${(0,capitalize/* default */.Z)(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => (0,esm_extends/* default */.Z)({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && (0,emotion_react_browser_esm/* css */.iv)(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/react.forwardRef(function LinearProgress(inProps, ref) {\n  const props = (0,useThemeProps/* default */.Z)({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      value,\n      valueBuffer,\n      variant = 'indeterminate'\n    } = props,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, _excluded);\n  const ownerState = (0,esm_extends/* default */.Z)({}, props, {\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const theme = (0,useTheme/* default */.Z)();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (false) {}\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (false) {}\n  }\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(LinearProgressRoot, (0,esm_extends/* default */.Z)({\n    className: (0,clsx_m/* default */.Z)(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/(0,jsx_runtime.jsx)(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/(0,jsx_runtime.jsx)(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/(0,jsx_runtime.jsx)(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\n false ? 0 : void 0;\n/* harmony default export */ const LinearProgress_LinearProgress = (LinearProgress);\n// EXTERNAL MODULE: ./src/ElementContext.js\nvar ElementContext = __webpack_require__(799);\n// EXTERNAL MODULE: ./src/ClickTracker.jsx\nvar ClickTracker = __webpack_require__(4541);\n// EXTERNAL MODULE: ./node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js\nvar extendSxProp = __webpack_require__(9707);\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Typography/typographyClasses.js\n\n\nfunction getTypographyUtilityClass(slot) {\n  return (0,generateUtilityClass/* default */.Z)('MuiTypography', slot);\n}\nconst typographyClasses = (0,generateUtilityClasses/* default */.Z)('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\n/* harmony default export */ const Typography_typographyClasses = ((/* unused pure expression or super */ null && (typographyClasses)));\n;// CONCATENATED MODULE: ./node_modules/@mui/material/Typography/Typography.js\n\n\nconst Typography_excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\n\n\n\n\n\n\n\n\n\n\nconst Typography_useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${(0,capitalize/* default */.Z)(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return (0,composeClasses/* default */.Z)(slots, getTypographyUtilityClass, classes);\n};\nconst TypographyRoot = (0,styled/* default */.ZP)('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${(0,capitalize/* default */.Z)(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => (0,esm_extends/* default */.Z)({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/react.forwardRef(function Typography(inProps, ref) {\n  const themeProps = (0,useThemeProps/* default */.Z)({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = (0,extendSxProp/* default */.Z)((0,esm_extends/* default */.Z)({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = (0,objectWithoutPropertiesLoose/* default */.Z)(props, Typography_excluded);\n  const ownerState = (0,esm_extends/* default */.Z)({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = Typography_useUtilityClasses(ownerState);\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(TypographyRoot, (0,esm_extends/* default */.Z)({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: (0,clsx_m/* default */.Z)(classes.root, className)\n  }, other));\n});\n false ? 0 : void 0;\n/* harmony default export */ const Typography_Typography = (Typography);\n;// CONCATENATED MODULE: ./src/Components/Reviews/Ratingbreakdown.jsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\nvar Ratingbreakdown = function Ratingbreakdown(props) {\n  var element = (0,react.useContext)(ElementContext/* default */.Z);\n  var _useState = (0,react.useState)(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    togglefilter5 = _useState2[0],\n    setTogglefilter5 = _useState2[1];\n  var _useState3 = (0,react.useState)(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    togglefilter4 = _useState4[0],\n    setTogglefilter4 = _useState4[1];\n  var _useState5 = (0,react.useState)(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    togglefilter3 = _useState6[0],\n    setTogglefilter3 = _useState6[1];\n  var _useState7 = (0,react.useState)(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    togglefilter2 = _useState8[0],\n    setTogglefilter2 = _useState8[1];\n  var _useState9 = (0,react.useState)(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    togglefilter1 = _useState10[0],\n    setTogglefilter1 = _useState10[1];\n  var _useState11 = (0,react.useState)([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    count5starclick = _useState12[0],\n    setCount5starclick = _useState12[1];\n  var _useState13 = (0,react.useState)([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    count4starclick = _useState14[0],\n    setCount4starclick = _useState14[1];\n  var _useState15 = (0,react.useState)([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    count3starclick = _useState16[0],\n    setCount3starclick = _useState16[1];\n  var _useState17 = (0,react.useState)([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    count2starclick = _useState18[0],\n    setCount2starclick = _useState18[1];\n  var _useState19 = (0,react.useState)([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    count1starclick = _useState20[0],\n    setCount1starclick = _useState20[1];\n  var star = props.reviewStars.ratings;\n  //console.log('star',star)\n  var rec = props.reviewStars.recommended;\n  // rec? console.log((rec.true+rec.false)):null\n  //console.log(rec)\n  var nofilter = function nofilter() {\n    props.setFilter(0);\n  };\n  var filterfivestar = function filterfivestar() {\n    //console.log(togglefilter)\n    if (togglefilter5) {\n      props.setFilter(5);\n      setTogglefilter1(true);\n      setTogglefilter2(true);\n      setTogglefilter3(true);\n      setTogglefilter4(true);\n    } else {\n      props.setFilter(0);\n    }\n  };\n  var filterfourstar = function filterfourstar() {\n    if (togglefilter4) {\n      props.setFilter(4);\n      setTogglefilter1(true);\n      setTogglefilter2(true);\n      setTogglefilter3(true);\n      setTogglefilter5(true);\n    } else {\n      props.setFilter(0);\n    }\n  };\n  var filterthreestar = function filterthreestar() {\n    if (togglefilter3) {\n      props.setFilter(3);\n      setTogglefilter1(true);\n      setTogglefilter2(true);\n      setTogglefilter5(true);\n      setTogglefilter4(true);\n    } else {\n      props.setFilter(0);\n    }\n  };\n  var filtertwostar = function filtertwostar() {\n    if (togglefilter2) {\n      props.setFilter(2);\n      setTogglefilter1(true);\n      setTogglefilter5(true);\n      setTogglefilter3(true);\n      setTogglefilter4(true);\n    } else {\n      props.setFilter(0);\n    }\n  };\n  var filteronestar = function filteronestar() {\n    if (togglefilter1) {\n      props.setFilter(1);\n      setTogglefilter5(true);\n      setTogglefilter2(true);\n      setTogglefilter3(true);\n      setTogglefilter4(true);\n    } else {\n      props.setFilter(0);\n    }\n  };\n  var averagerating = function averagerating(ratingsObj) {\n    //console.log(ratingsObj);\n    var totalCount = 0;\n    var averageCount = 0;\n    for (var key in ratingsObj) {\n      var value = Number(ratingsObj[key]);\n      var num = Number(key);\n      totalCount += value;\n      averageCount += num * ratingsObj[key];\n    }\n    if (totalCount === 0) {\n      return 0;\n    }\n    var average = averageCount / totalCount;\n    average = Math.round(average * 10) / 10;\n    return average;\n  };\n  var obj = {\n    '1': 0,\n    '2': 0,\n    '3': 0,\n    '4': 0,\n    '5': 0\n  };\n  var total = 0;\n  for (var key in star) {\n    total += Number(star[key]);\n    for (var key1 in obj) {\n      if (key === key1) {\n        obj[key] += Number(star[key]);\n      }\n    }\n  }\n  var fivestar = Math.round(obj['5'] / total * 100);\n  var fourstar = Math.round(obj['4'] / total * 100);\n  var threestar = Math.round(obj['3'] / total * 100);\n  var twostar = Math.round(obj['2'] / total * 100);\n  var onestar = Math.round(obj['1'] / total * 100);\n  //console.log('fivestar', fivestar)\n\n  var average = averagerating(star);\n  var width = average * 20;\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: \"rating-breakdown\"\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: \"RatingText\",\n    onClick: nofilter\n  }, average, /*#__PURE__*/react.createElement(Rating/* default */.Z, {\n    name: \"read-only\",\n    value: average,\n    precision: 0.1,\n    size: 'small',\n    readOnly: true,\n    style: {\n      color: '#3f51b5'\n    }\n  })), /*#__PURE__*/react.createElement(\"div\", {\n    className: \"RecommendText\"\n  }, rec ? Math.round(Number(rec[\"true\"]) / (Number(rec[\"true\"]) + Number(rec[\"false\"])) * 100) : 0, \"% of reviews recommend this product\"), /*#__PURE__*/react.createElement(ClickTracker/* default */.Z, {\n    selector: \"\".concat(element, \"-starfilter5\"),\n    WrappedComponent: /*#__PURE__*/react.createElement(\"div\", {\n      className: \"5star\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"BarTitle\"\n    }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"span\", null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n      size: \"small\",\n      onClick: function onClick() {\n        setTogglefilter5(!togglefilter5);\n        filterfivestar();\n        var temp = count5starclick;\n        temp.push(Date.now());\n        setCount5starclick(temp);\n      }\n    }, /*#__PURE__*/react.createElement(Typography_Typography, {\n      style: {\n        fontSize: '10px',\n        fontFamily: 'Lucida Sans, Lucida Sans Regular, Lucida Grande, Lucida Sans Unicode, Geneva, Verdana, sans-serif',\n        color: 'gray'\n      }\n    }, \"Five Star: \", fivestar, \"%\")))), /*#__PURE__*/react.createElement(LinearProgress_LinearProgress, {\n      variant: \"determinate\",\n      value: fivestar,\n      sx: {\n        bgcolor: 'lightgrey',\n        '& .MuiLinearProgress-bar': {\n          bgcolor: '#808080'\n        }\n      }\n    })))\n  }), /*#__PURE__*/react.createElement(ClickTracker/* default */.Z, {\n    selector: \"\".concat(element, \"-starfilter4\"),\n    WrappedComponent: /*#__PURE__*/react.createElement(\"div\", {\n      className: \"4star\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"BarTitle\"\n    }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"span\", null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n      size: \"small\",\n      onClick: function onClick() {\n        setTogglefilter4(!togglefilter4);\n        filterfourstar();\n        var temp = count4starclick;\n        temp.push(Date.now());\n        setCount4starclick(temp);\n      }\n    }, /*#__PURE__*/react.createElement(Typography_Typography, {\n      style: {\n        fontSize: '10px',\n        fontFamily: 'Lucida Sans, Lucida Sans Regular, Lucida Grande, Lucida Sans Unicode, Geneva, Verdana, sans-serif',\n        color: 'gray'\n      }\n    }, \"Four Star: \", fourstar, \"%\")))), /*#__PURE__*/react.createElement(LinearProgress_LinearProgress, {\n      variant: \"determinate\",\n      value: fourstar,\n      sx: {\n        bgcolor: 'lightgrey',\n        '& .MuiLinearProgress-bar': {\n          bgcolor: '#808080'\n        }\n      }\n    })))\n  }), /*#__PURE__*/react.createElement(ClickTracker/* default */.Z, {\n    selector: \"\".concat(element, \"-starfilter3\"),\n    WrappedComponent: /*#__PURE__*/react.createElement(\"div\", {\n      className: \"3star\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"BarTitle\"\n    }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"span\", null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n      size: \"small\",\n      onClick: function onClick() {\n        setTogglefilter3(!togglefilter3);\n        filterthreestar();\n        var temp = count3starclick;\n        temp.push(Date.now());\n        setCount3starclick(temp);\n      }\n    }, /*#__PURE__*/react.createElement(Typography_Typography, {\n      style: {\n        fontSize: '10px',\n        fontFamily: 'Lucida Sans, Lucida Sans Regular, Lucida Grande, Lucida Sans Unicode, Geneva, Verdana, sans-serif',\n        color: 'gray'\n      }\n    }, \"Three Star: \", threestar, \"%\")))), /*#__PURE__*/react.createElement(LinearProgress_LinearProgress, {\n      variant: \"determinate\",\n      value: threestar,\n      sx: {\n        bgcolor: 'lightgrey',\n        '& .MuiLinearProgress-bar': {\n          bgcolor: '#808080'\n        }\n      }\n    })))\n  }), /*#__PURE__*/react.createElement(ClickTracker/* default */.Z, {\n    selector: \"\".concat(element, \"-starfilter2\"),\n    WrappedComponent: /*#__PURE__*/react.createElement(\"div\", {\n      className: \"2star\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"BarTitle\"\n    }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"span\", null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n      size: \"small\",\n      onClick: function onClick() {\n        setTogglefilter2(!togglefilter2);\n        filtertwostar();\n        var temp = count2starclick;\n        temp.push(Date.now());\n        setCount2starclick(temp);\n      }\n    }, /*#__PURE__*/react.createElement(Typography_Typography, {\n      style: {\n        fontSize: '10px',\n        fontFamily: 'Lucida Sans, Lucida Sans Regular, Lucida Grande, Lucida Sans Unicode, Geneva, Verdana, sans-serif',\n        color: 'gray'\n      }\n    }, \"Two Star: \", twostar, \"%\")))), /*#__PURE__*/react.createElement(LinearProgress_LinearProgress, {\n      variant: \"determinate\",\n      value: twostar,\n      sx: {\n        bgcolor: 'lightgrey',\n        '& .MuiLinearProgress-bar': {\n          bgcolor: '#808080'\n        }\n      }\n    })))\n  }), /*#__PURE__*/react.createElement(ClickTracker/* default */.Z, {\n    selector: \"\".concat(element, \"-starfilter1\"),\n    WrappedComponent: /*#__PURE__*/react.createElement(\"div\", {\n      className: \"1star\"\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: \"BarTitle\"\n    }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(\"span\", null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n      size: \"small\",\n      onClick: function onClick() {\n        setTogglefilter1(!togglefilter1);\n        filteronestar();\n        var temp = count1starclick;\n        temp.push(Date.now());\n        setCount1starclick(temp);\n      }\n    }, /*#__PURE__*/react.createElement(Typography_Typography, {\n      style: {\n        fontSize: '10px',\n        fontFamily: 'Lucida Sans, Lucida Sans Regular, Lucida Grande, Lucida Sans Unicode, Geneva, Verdana, sans-serif',\n        color: 'gray'\n      }\n    }, \"One Star: \", onestar, \"%\")))), /*#__PURE__*/react.createElement(LinearProgress_LinearProgress, {\n      variant: \"determinate\",\n      value: onestar,\n      sx: {\n        bgcolor: 'lightgrey',\n        '& .MuiLinearProgress-bar': {\n          bgcolor: '#808080'\n        }\n      }\n    })))\n  }));\n};\n/* harmony default export */ const Reviews_Ratingbreakdown = (Ratingbreakdown);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///281\n")}}]);